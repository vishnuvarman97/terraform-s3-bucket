pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'us-east-2' // Set your AWS region here
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Pull code from GitHub repository
                    checkout([$class: 'GitSCM', 
                              branches: [[name: '*/main']], // Replace 'main' with your branch name if different
                              userRemoteConfigs: [[url: 'https://github.com/vishnuvarman97/terraform-s3-bucket.git']]
                    ])
                }
            }
        }
        stage('Terraform Init') {
            steps {
                script {
                    try {
                        // Initialize Terraform
                        sh 'terraform init'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Terraform Plan') {
            steps {
                script {
                    try {
                        // Generate Terraform execution plan
                        sh 'terraform plan'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Terraform Apply') {
            steps {
                input message: 'Approve Terraform Apply?', ok: 'Apply'
                script {
                    try {
                        // Apply Terraform changes
                        sh 'terraform apply -auto-approve'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
    }
    
    post {
        always {
            // Clean workspace after build
            cleanWs()
        }
        success {
            // Log success message
            echo 'Pipeline succeeded!'
        }
        failure {
            // Log failure message
            echo 'Pipeline failed!'
        }
    }
}
